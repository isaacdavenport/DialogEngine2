<UserControl x:Class="DialogGenerator.UI.View.DialogModelsNavigationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:enums="clr-namespace:DialogGenerator.Model.Enum;assembly=DialogGenerator.Model"
             xmlns:local="clr-namespace:DialogGenerator.UI.View"
             xmlns:converters="clr-namespace:DialogGenerator.UI.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:CloneValuesConverter x:Key="CloneValuesConverter" />
            <converters:ModelDialogStateToColorValueConverter x:Key="ModelDialogStateToColorValueConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ListView Grid.Row="1"
                  ItemsSource="{Binding DialogModels}"
                  HorizontalAlignment="Stretch"
                  BorderThickness="20"
                  BorderBrush="WhiteSmoke"
                  SelectedValue="{Binding SelectedDialogModelInfo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch"  Height="50">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Margin="10,0,0,0" Grid.Column="0" VerticalAlignment="Center" Text="{Binding Path=ModelsCollectionName}" />
                        <StackPanel HorizontalAlignment="Right" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                            <Ellipse Fill="{Binding Path=State, Converter={StaticResource ModelDialogStateToColorValueConverter}}" 
                                     Width="10" Height="10" Grid.Column="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <materialDesign:PopupBox Width="25"
                                                     Margin="0,0,0,0"
                                                     HorizontalAlignment="Center"
                                                     Style="{DynamicResource MaterialDesignToolForegroundPopupBox}"  
                                                     Background="Red">
                                <materialDesign:PopupBox.ToggleContent>
                                    <materialDesign:PackIcon Kind="MenuDown" ToolTip="Change status"  Foreground="LightGray" Height="30" Width="30"/>
                                </materialDesign:PopupBox.ToggleContent>
                                <StackPanel Margin="0,10,0,10">
                                    <Button IsEnabled="True" Command="{Binding DataContext.ChangeModelDialogStatusCommand,
                                                                               RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DialogModelsNavigationView}}">
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal" >
                                                <Ellipse Fill="Green" Width="10" Height="10" Grid.Column="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <TextBlock Margin="5,0,0,0" Text="Use in dialog" VerticalAlignment="Center" />
                                            </StackPanel>
                                        </Button.Content>
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource CloneValuesConverter}">
                                                <Binding />
                                                <Binding Source="{x:Static enums:ModelDialogState.On}" Mode="OneWay"/>
                                                <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}" />
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                    <Button IsEnabled="True" Command="{Binding DataContext.ChangeModelDialogStatusCommand,
                                                                               RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DialogModelsNavigationView}}">
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal" >
                                                <Ellipse Fill="Red" Width="10" Height="10" Grid.Column="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <TextBlock Margin="5,0,0,0" Text="Ignore in dialog" VerticalAlignment="Center" />
                                            </StackPanel>
                                        </Button.Content>
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource CloneValuesConverter}" >
                                                <Binding  />
                                                <Binding Source="{x:Static enums:ModelDialogState.Off}" Mode="OneWay"/>
                                                <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}" />
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                </StackPanel>
                            </materialDesign:PopupBox>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</UserControl>
