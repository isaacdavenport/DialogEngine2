<UserControl x:Class="DialogGenerator.UI.Views.CharactersNavigationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:converters ="clr-namespace:DialogGenerator.UI.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:enums ="clr-namespace:DialogGenerator.Model.Enum;assembly=DialogGenerator.Model"
             xmlns:view ="clr-namespace:DialogGenerator.UI.Views"
             xmlns:local ="clr-namespace:DialogGenerator.UI.Views"
             mc:Ignorable="d"
             Width="300"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:CharacterStateToColorValueConverter x:Key="CharacterStateToColorValueConverter" />
            <converters:CloneValuesConverter x:Key="CloneValuesConverter" />
            <converters:ImageToFullPathValueConverter x:Key="ImageToFullPathValueConverter" />

            <Style TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="btnBorder" CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="btnBorder" Property="BorderBrush" Value="LightGray" />
                                    <Setter TargetName="btnBorder" Property="BorderThickness" Value="1" />
                                    <Setter TargetName="btnBorder" Property="Background" Value="WhiteSmoke" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <view:ToolbarView Grid.Row="0" />
        
        <Border BorderThickness="0,0,0,1" Grid.Row="1" BorderBrush="LightGray">
            <Grid>
                <StackPanel Orientation="Horizontal" Margin="10">
                    <Button Command="{Binding CreateNewCharacterCommand}" ToolTip="Add new character"  Width="40" 
                            Height="40" BorderThickness="0" Background="White" Foreground="{DynamicResource PrimaryHueMidBrush}">
                        <Button.Content>
                            <materialDesign:PackIcon Kind="AccountPlus" Height="30" Width="30"  />
                        </Button.Content>
                    </Button>
                    <Button Command="{Binding ImportCharacterCommand}" ToolTip="Import existing character" Margin="5,0,5,0" Width="40" 
                            Height="40" BorderThickness="0" Background="White" Foreground="{DynamicResource PrimaryHueMidBrush}">
                        <Button.Content>
                            <materialDesign:PackIcon Kind="FileImport" Height="30" Width="30" />
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>

        <Border Grid.Row="2" BorderThickness="0,0,0,1" BorderBrush="LightGray">
            <Grid>
                <TextBox Margin="15,10,15,10" VerticalContentAlignment="Center" >
                    <TextBox.Template>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border BorderThickness="1" x:Name="tbBorder" MinHeight="30" Background="WhiteSmoke" BorderBrush="LightGray" CornerRadius="5" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <materialDesign:PackIcon Kind="Magnify" Foreground="DarkGray"  HorizontalAlignment="Left" 
                                                             VerticalAlignment="Center" Padding="0" Width="15" Height="15" Margin="10,0,10,0" Grid.Column="0" />
                                    <TextBox Style="{x:Null}" VerticalAlignment="Center" Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}"
                                             Background="{TemplateBinding Background}" BorderThickness="0" Grid.Column="1" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="tbBorder" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </TextBox.Template>
                </TextBox>
                <TextBlock IsHitTestVisible="False" Text="Search characters..." VerticalAlignment="Center" HorizontalAlignment="Left" Margin="53,0,0,0" Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FilterText}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>

        <ListView Grid.Row="3"
                  ItemsSource="{Binding CharactersViewSource}"
                  HorizontalAlignment="Stretch"
                  BorderThickness="20"
                  AlternationCount="10000"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  BorderBrush="WhiteSmoke"
                  x:Name="CharactersListView"
                  SelectedValue="{Binding SelectedCharacter,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch"  Height="50">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>                        
                        <StackPanel Orientation="Horizontal"  Grid.Column="0" HorizontalAlignment="Left">
                            <Ellipse Height="40" Stroke="LightGray" Stretch="Fill" Width="40">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding CharacterImage,Converter={StaticResource ImageToFullPathValueConverter}}" />
                                </Ellipse.Fill>
                            </Ellipse>
                            <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}" Text="{Binding Path=CharacterName}" />
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Right" Grid.Column="2" Margin="0,0,10,0" Orientation="Horizontal" VerticalAlignment="Center">
                            <Ellipse Fill="{Binding Path=State, Converter={StaticResource CharacterStateToColorValueConverter}}" 
                                     Width="10" Height="10"  Grid.Column="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <materialDesign:PopupBox Width="25"
                                                     Margin="0,0,0,0"
                                                     HorizontalAlignment="Center"
                                                     Tag="{Binding (ListView.AlternationIndex), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                     Style="{DynamicResource MaterialDesignToolForegroundPopupBox}"  
                                                     Background="Red">
                                <materialDesign:PopupBox.ToggleContent>
                                    <materialDesign:PackIcon Kind="MenuDown" ToolTip="Change status"  Foreground="LightGray" Height="30" Width="30"/>
                                </materialDesign:PopupBox.ToggleContent>
                                <StackPanel Margin="0,10,0,10">
                                    <Button IsEnabled="True" Command="{Binding DataContext.ChangeCharacterStatusCommand,
                                                                               RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CharactersNavigationView}}">                                        
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal" >
                                                <Ellipse Fill="Green" Width="10" Height="10" Grid.Column="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <TextBlock Margin="5,0,0,0" Text="Always selected" VerticalAlignment="Center" />
                                            </StackPanel>
                                        </Button.Content>
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource CloneValuesConverter}">
                                                <Binding />
                                                <Binding Source="{x:Static enums:CharacterState.On}" Mode="OneWay"/>
                                                <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}" />
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                    <Button IsEnabled="True" Command="{Binding DataContext.ChangeCharacterStatusCommand,
                                                                               RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CharactersNavigationView}}">
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal" >
                                                <Ellipse Fill="Orange" Width="10" Height="10" Grid.Column="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <TextBlock Margin="5,0,0,0" Text="Available for selection" VerticalAlignment="Center" />
                                            </StackPanel>
                                        </Button.Content>
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource CloneValuesConverter}">
                                                <Binding  />
                                                <Binding Source="{x:Static enums:CharacterState.Available}" Mode="OneWay"/>
                                                <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}" />
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                    <Button IsEnabled="True" Command="{Binding DataContext.ChangeCharacterStatusCommand,
                                                                               RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CharactersNavigationView}}">                                        
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal" >
                                                <Ellipse Fill="Red" Width="10" Height="10" Grid.Column="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <TextBlock Margin="5,0,0,0" Text="Ignore from selection" VerticalAlignment="Center" />
                                            </StackPanel>
                                        </Button.Content>
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource CloneValuesConverter}">
                                                <Binding  />
                                                <Binding Source="{x:Static enums:CharacterState.Off}" Mode="OneWay"/>
                                                <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}"/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                </StackPanel>
                            </materialDesign:PopupBox>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="BorderBrush" Value="LightGray" />
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</UserControl>
