<UserControl x:Class="DialogGenerator.UI.Views.ComputerSelectsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"                         
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:enums ="clr-namespace:DialogGenerator.Model.Enum;assembly=DialogGenerator.Model"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:inf="clr-namespace:DialogGenerator.Core;assembly=DialogGenerator.Core"
             xmlns:view="clr-namespace:DialogGenerator.UI.Views"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"             
             xmlns:converters="clr-namespace:DialogGenerator.UI.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:CharacterStateToColorValueConverter x:Key="CharacterStateToColorValueConverter" />
                    <converters:CloneValuesConverter x:Key="CloneValuesConverter" />
                    <converters:ImageToFullPathValueConverter x:Key="ImageToFullPathValueConverter" />
                    <converters:ImageContentValueConverter x:Key="ImageContentValueConverter" />
                    <converters:IsChangeCharacterStateBtnEnabledValueConverter x:Key="IsChangeCharacterStateBtnEnabledValueConverter" />

                    <DataTemplate x:Key="RegularCharacterTemplate">
                        <materialDesign:Card Width="200" Margin="10" >
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="140" />
                                    <RowDefinition Height="80" />
                                </Grid.RowDefinitions>
                                <materialDesign:ColorZone Mode="PrimaryLight" 
                                                          Content="{Binding CharacterImage,Converter={StaticResource ImageContentValueConverter}}" VerticalAlignment="Stretch">
                                </materialDesign:ColorZone>
                                <StackPanel Grid.Row="1" Margin="8 15 8 15" HorizontalAlignment="Center" Orientation="Vertical" >
                                    <TextBlock FontSize="16" FontWeight="Bold" Text="{Binding CharacterName}" HorizontalAlignment="Center"></TextBlock>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PopupBox Width="25"
                                                     Margin="0,0,0,0"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"
                                                     Tag="{Binding (ListView.AlternationIndex), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                     Style="{DynamicResource MaterialDesignToolForegroundPopupBox}"  
                                                     Background="Red">
                                            <materialDesign:PopupBox.ToggleContent>
                                                <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" VerticalContentAlignment="Center" ToolTip="Change status"  Foreground="Green" Height="30" Width="30"/>
                                            </materialDesign:PopupBox.ToggleContent>
                                            <StackPanel Margin="0,10,0,10">
                                                <Button IsEnabled="{Binding State,Converter={StaticResource IsChangeCharacterStateBtnEnabledValueConverter},ConverterParameter={x:Static enums:CharacterState.On}}" 
                                                        Command="{Binding DataContext.ChangeCharacterStatusCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=view:ComputerSelectsView}}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal" >
                                                            <Ellipse Fill="Green" Width="10" Height="10" Grid.Column="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            <TextBlock Margin="5,0,0,0" Text="Do talk" VerticalAlignment="Center" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                    <Button.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource CloneValuesConverter}">
                                                            <Binding />
                                                            <Binding Source="{x:Static enums:CharacterState.On}" Mode="OneWay"/>
                                                            <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        </MultiBinding>
                                                    </Button.CommandParameter>
                                                </Button>
                                                <Button IsEnabled="{Binding State,Converter={StaticResource IsChangeCharacterStateBtnEnabledValueConverter},ConverterParameter={x:Static enums:CharacterState.Available}}" 
                                                        Command="{Binding DataContext.ChangeCharacterStatusCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=view:ComputerSelectsView}}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal" >
                                                            <Ellipse Fill="Orange" Width="10" Height="10" Grid.Column="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            <TextBlock Margin="5,0,0,0" Text="Maybe talk" VerticalAlignment="Center" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                    <Button.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource CloneValuesConverter}">
                                                            <Binding  />
                                                            <Binding Source="{x:Static enums:CharacterState.Available}" Mode="OneWay"/>
                                                            <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        </MultiBinding>
                                                    </Button.CommandParameter>
                                                </Button>
                                                <Button IsEnabled="{Binding State,Converter={StaticResource IsChangeCharacterStateBtnEnabledValueConverter},ConverterParameter={x:Static enums:CharacterState.Off}}" 
                                                        Command="{Binding DataContext.ChangeCharacterStatusCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=view:ComputerSelectsView}}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal" >
                                                            <Ellipse Fill="Red" Width="10" Height="10" Grid.Column="2" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            <TextBlock Margin="5,0,0,0" Text="Don't talk" VerticalAlignment="Center" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                    <Button.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource CloneValuesConverter}">
                                                            <Binding  />
                                                            <Binding Source="{x:Static enums:CharacterState.Off}" Mode="OneWay"/>
                                                            <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                        </MultiBinding>
                                                    </Button.CommandParameter>
                                                </Button>
                                            </StackPanel>
                                        </materialDesign:PopupBox>
                                    </StackPanel>

                                </StackPanel>
                            </Grid>
                        </materialDesign:Card>
                    </DataTemplate>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>


        <Border Grid.Row="0" BorderThickness="0" HorizontalAlignment="Center" MinWidth="500" BorderBrush="LightGray">
            <Grid>
                <TextBox Margin="15,15,15,10" VerticalContentAlignment="Center" >
                    <TextBox.Template>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border BorderThickness="1" x:Name="tbBorder" MinHeight="30" Background="White" BorderBrush="LightGray" CornerRadius="5" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <materialDesign:PackIcon Kind="Magnify" Foreground="#51cb8c"  HorizontalAlignment="Left" 
                                                             VerticalAlignment="Center" Padding="0" Width="15" Height="15" Margin="10,0,10,0" Grid.Column="0" />
                                    <TextBox Style="{x:Null}" VerticalAlignment="Center" Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}"
                                             Background="{TemplateBinding Background}" BorderThickness="0" Grid.Column="1" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="tbBorder" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </TextBox.Template>
                </TextBox>
                <TextBlock IsHitTestVisible="False" Text="Search characters ..." VerticalAlignment="Center" 
                           HorizontalAlignment="Left" Margin="53,4,0,0" Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FilterText}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>

        <ScrollViewer Grid.Row="1"  HorizontalAlignment="Stretch" Background="#f2f2f2"  
                      VerticalAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ItemsControl Grid.Row="1" HorizontalAlignment="Center" AlternationCount="1000" ItemTemplate="{StaticResource RegularCharacterTemplate}" ItemsSource="{Binding CharactersViewSource}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>

        <Border Grid.Row="2" BorderThickness="0 1 0 0"  BorderBrush="LightGray" >
            <Grid  Background="White">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <materialDesign:Card Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" Height="150" Margin="10" Background="#017a84" >
                        <materialDesign:Card.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="NavigationCommands.GoToPage">
                                <MouseBinding.CommandParameter>
                                    <MultiBinding Converter="{StaticResource CloneValuesConverter}">
                                        <Binding Source="{x:Static inf:Constants.ContentRegion}" />
                                        <Binding Source="{x:Type view:HomeView}" />
                                    </MultiBinding>
                                </MouseBinding.CommandParameter>
                            </MouseBinding>
                        </materialDesign:Card.InputBindings>
                        <Grid Style="{StaticResource CardGrid}">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <materialDesign:PackIcon Kind="Home" HorizontalAlignment="Center" Height="50" Width="50" Foreground="White" />
                                <TextBlock Text="Home" Foreground="White" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </StackPanel>
                        </Grid>
                    </materialDesign:Card>
                </StackPanel>

            </Grid>
        </Border>
    </Grid>
</UserControl>
